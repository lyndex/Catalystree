package com.example.catalystreeapp.Transportation;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;

import com.example.catalystreeapp.Main.MasterDataBaseHelper;

public class CarDataBaseAdapter {

    private static String TAG = "CarDataBaseAdapter";
    static final String DATABASE_NAME = "catalystree.db";
    static final int DATABASE_VERSION = 1;
    public static final int NAME_COLUMN = 1;

    private static final String DATABASE_TABLE = "CAR";
    public static final String COLUMN_USERNAME = "USERNAME";
    public static final String COLUMN_DATE = "DATE";
    public static final String COLUMN_TYPE = "TYPE";
    public static final String COLUMN_DISTANCE = "DISTANCE";
    public static final String COLUMN_TIME = "TIME";

    // Variable to hold the database instance
    public static SQLiteDatabase db;
    // Context of the application using the database.
    private final Context context;
    // Database open/upgrade helper
    private MasterDataBaseHelper dbHelper;

    public CarDataBaseAdapter(Context _context) {
        context = _context;
        dbHelper = new MasterDataBaseHelper(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    public CarDataBaseAdapter open() throws SQLException {
        db = dbHelper.getWritableDatabase();
        return this;
    }

    public SQLiteDatabase getDatabaseInstance() {
        return db;
    }


    public void insertEntry(String username, String date, String type, Integer distance, Integer time) {
        ContentValues newValues = new ContentValues();
        // Assign values for each row.
        newValues.put("USERNAME", username);
        newValues.put("DATE", date);
        newValues.put("TYPE", type);
        newValues.put("DISTANCE", distance);
        newValues.put("TIME", time);

        // Insert the row into your table
        db.insert("CAR", null, newValues);
        ///Toast.makeText(context, "Reminder Is Successfully Saved", Toast.LENGTH_LONG).show();
    }
// get car entry (cursor with all columns from this user if the date entered is day"
    public Cursor getCarEntryStandard(String username, String Day) {

        Cursor carCursor = db.query(true, "CAR", new String[]{"date, type, distance, time"}, "USERNAME=?", new String[]{username}, null, null, null, "50");
        if (carCursor.getCount() < 1) {
            carCursor.close();
            Log.d(TAG, "getCarEntry: user does not exist");
        }
        String standard = "Standard";
        for (int i = 0; i < 50 && carCursor.moveToNext(); ++i) {
            carCursor.moveToFirst();
            String date = carCursor.getString(carCursor.getColumnIndex("DATE"));
            if (date.equals(Day)) {
                String type = carCursor.getString(carCursor.getColumnIndex("TYPE"));
                if (type.equals(standard)) {
                    Integer distance = carCursor.getInt(carCursor.getColumnIndex("DISTANCE"));
                    Integer time = carCursor.getInt(carCursor.getColumnIndex("TIME"));
                }
            }
        }
        return carCursor;
    }
    public Cursor getCarEntryTruck(String username, String Day) {

        Cursor carCursor = db.query(true, "CAR", new String[]{"date, type, distance, time"}, "USERNAME=?", new String[]{username}, null, null, null, "50");
        if (carCursor.getCount() < 1) {
            carCursor.close();
            Log.d(TAG, "getCarEntry: user does not exist");
        }
        String truck = "Truck";
        String electric = "Electric/Hybrid";
        for (int i = 0; i < 50 && carCursor.moveToNext(); ++i) {
            carCursor.moveToFirst();
            String date = carCursor.getString(carCursor.getColumnIndex("DATE"));
            if (date.equals(Day)) {
                String type = carCursor.getString(carCursor.getColumnIndex("TYPE"));
                if (type.equals(truck)) {
                    Integer distance = carCursor.getInt(carCursor.getColumnIndex("DISTANCE"));
                    Integer time = carCursor.getInt(carCursor.getColumnIndex("TIME"));
                }
            }
        }
        return carCursor;
    }
    public Cursor getCarEntryElectric(String username, String Day) {

        Cursor carCursor = db.query(true, "CAR", new String[]{"date, type, distance, time"}, "USERNAME=?", new String[]{username}, null, null, null, "50");
        if (carCursor.getCount() < 1) {
            carCursor.close();
            Log.d(TAG, "getCarEntry: user does not exist");
        }
        String electric = "Electric/Hybrid";
        for (int i = 0; i < 50 && carCursor.moveToNext(); ++i) {
            carCursor.moveToFirst();
            String date = carCursor.getString(carCursor.getColumnIndex("DATE"));
            if (date.equals(Day)) {
                String type = carCursor.getString(carCursor.getColumnIndex("TYPE"));
                if (type.equals(electric)) {
                    Integer distance = carCursor.getInt(carCursor.getColumnIndex("DISTANCE"));
                    Integer time = carCursor.getInt(carCursor.getColumnIndex("TIME"));
                }
            }
        }
        return carCursor;
    }


    public void close() {
        db.close();
    }
}

//    public int deleteEntry(String username) {
//        //String id=String.valueOf(ID);
//        String where = "ID=?";
//        int numberOFEntriesDeleted = db.delete("CAR", where, new String[]{username});
//        // Toast.makeText(context, "Number fo Entry Deleted Successfully : "+numberOFEntriesDeleted, Toast.LENGTH_LONG).show();
//        return numberOFEntriesDeleted;
//    }
//
//    public String getSinlgeEntry(String username) {
//        Cursor cursor = db.query("CAR", null, " USERNAME=?", new String[]{username}, null, null, null);
//        if (cursor.getCount() < 1) // UserName Not Exist
//        {
//            cursor.close();
//            return "NOT EXIST";
//        }
//        cursor.moveToFirst();
//        String type = cursor.getString(cursor.getColumnIndex("TYPE"));
//        cursor.close();
//        return type;
//    }

/*
    public Cursor getCarEntryTest(String username) {

        Cursor carCursor = db.query(true, "CAR", new String[]{"date, time"} ,"USERNAME=?", new String[]{username}, null, null, null, "10");
        if (carCursor.getCount() < 1) {
            carCursor.close();
            Log.d(TAG, "getCarEntry: user does not exist");
        }
        for (int i = 0; i < 7 && carCursor.moveToNext(); ++i) {
            carCursor.moveToFirst();
            String type = carCursor.getString(carCursor.getColumnIndex("DATE"));
            Integer time = carCursor.getInt(carCursor.getColumnIndex("TIME"));
        }

        return carCursor;
    }
*/

/*
    public Cursor getCarEntry(String username) {

        Cursor carCursor = db.query(true, "CAR", new String[]{"date, type, distance, time"} ,"USERNAME=?", new String[]{username}, null, null, null, "10");
        if (carCursor.getCount() < 1) {
            carCursor.close();
            Log.d(TAG, "getCarEntry: user does not exist");
        }
        for (int i = 0; i < 7 && carCursor.moveToNext(); ++i) {
            carCursor.moveToFirst();
            String date = carCursor.getString(carCursor.getColumnIndex("DATE"));
            String type = carCursor.getString(carCursor.getColumnIndex("TYPE"));
            Integer distance = carCursor.getInt(carCursor.getColumnIndex("DISTANCE"));
            Integer time = carCursor.getInt(carCursor.getColumnIndex("TIME"));
        }
        return carCursor;
    }
*/
